"use strict";(self.webpackChunkalgle=self.webpackChunkalgle||[]).push([[567],{567:(t,e,s)=>{s.r(e),s.d(e,{EXPERIMENTAL_PUZZLE_BASE_SHAPES:()=>ct,EXPERIMENTAL_PUZZLE_CUT_TYPES:()=>ft,ExperimentalPGNotation:()=>yt,PuzzleGeometry:()=>wt,Quat:()=>X,getPG3DNamedPuzzles:()=>ht,getPuzzleDescriptionString:()=>lt,getPuzzleGeometryByDesc:()=>mt,getPuzzleGeometryByName:()=>pt,parseOptions:()=>A,parsePuzzleDescription:()=>ut,schreierSims:()=>st});var o,n=s(705),i=s(686),r=class{constructor(t,e){(0,n.A)(this,"prefixFree",!0),(0,n.A)(this,"gripnames",[]),this.facenames=t,e&&(this.gripnames=e);for(let s=0;this.prefixFree&&s<t.length;s++)for(let e=0;this.prefixFree&&e<t.length;e++)s!==e&&t[s].startsWith(t[e])&&(this.prefixFree=!1)}setGripNames(t){this.gripnames=t}splitByFaceNames(t){const e=[];let s=0;for(;s<t.length;){s>0&&s<t.length&&"_"===t[s]&&s++;let o=-1;for(let e=0;e<this.facenames.length;e++)t.substr(s).startsWith(this.facenames[e])&&(o<0||this.facenames[e].length>this.facenames[o].length)&&(o=e);if(!(o>=0))throw new Error("Could not split ".concat(t," into face names."));e.push(o),s+=this.facenames[o].length}return e}joinByFaceIndices(t){let e="";const s=[];for(let o=0;o<t.length;o++)s.push(e),s.push(this.facenames[t[o]]),this.prefixFree||(e="_");return s.join("")}spinmatch(t,e){if(t===e)return!0;try{const s=this.splitByFaceNames(t),o=this.splitByFaceNames(e);if(s.length!==o.length&&s.length<3)return!1;for(let t=0;t<s.length;t++){for(let o=0;o<t;o++)if(s[t]===s[o])return!1;let e=!1;for(let n=0;n<o.length;n++)if(s[t]===o[n]){e=!0;break}if(!e)return!1}return!0}catch(s){return!1}}spinmatchv(t,e){return t.endsWith("v")&&e.endsWith("v")?this.spinmatch(t.slice(0,t.length-1),e.slice(0,e.length-1)):this.spinmatch(t,e)}unswizzle(t){(t.endsWith("v")||t.endsWith("w"))&&t[0]<="Z"&&(t=t.slice(0,t.length-1));const e=t.toUpperCase();for(let s=0;s<this.gripnames.length;s++){const t=this.gripnames[s];if(this.spinmatch(e,t))return t}return t}},a=class{notationToInternal(t){return t}notationToExternal(t){return t}},h=class{constructor(t,e){this.child=t,this.sw=e}notationToInternal(t){if("T"===t.family&&void 0===t.innerLayer&&void 0===t.outerLayer)return new i.yU(new i.VL("FLRv",t.innerLayer,t.outerLayer),t.amount);return this.child.notationToInternal(t)}notationToExternal(t){let e=t.family;return e.length>0&&"v"===e[e.length-1]&&(e=e.substring(0,e.length-1)),this.sw.spinmatch(e,"FLUR")?new i.yU(new i.VL("T",t.innerLayer,t.outerLayer),t.amount):this.child.notationToExternal(t)}},l=class{constructor(t,e){this.internalNames=t,this.externalNames=e}convertString(t,e,s){let o="";(t.endsWith("v")||t.endsWith("v"))&&t<="_"&&(o=t.slice(t.length-1),t=t.slice(0,t.length-1));const n=t.toUpperCase();let i=!1;return t!==n&&(i=!0,t=n),t=s.joinByFaceIndices(e.splitByFaceNames(t)),i&&(t=t.toLowerCase()),t+o}convert(t,e,s){const o=t.family,n=this.convertString(o,e,s);return o===n?t:new i.yU(new i.VL(n,t.innerLayer,t.outerLayer),t.amount)}notationToInternal(t){return this.convert(t,this.externalNames,this.internalNames)}notationToExternal(t){return this.convert(t,this.internalNames,this.externalNames)}},c=class{constructor(t){this.child=t}notationToInternal(t){if(void 0===t.innerLayer&&void 0===t.outerLayer){if(1===Math.abs(t.amount)){if("R++"===t.family)return new i.yU(new i.VL("L",3,2),-2*t.amount);if("R--"===t.family)return new i.yU(new i.VL("L",3,2),2*t.amount);if("D++"===t.family)return new i.yU(new i.VL("U",3,2),-2*t.amount);if("D--"===t.family)return new i.yU(new i.VL("U",3,2),2*t.amount);if("R_PLUSPLUS_"===t.family)return new i.yU(new i.VL("L",3,2),-2*t.amount);if("D_PLUSPLUS_"===t.family)return new i.yU(new i.VL("U",3,2),-2*t.amount)}if("y"===t.family)return new i.yU("Uv",t.amount);if("x"===t.family&&2===Math.abs(t.amount))return new i.yU("ERv",t.amount/2)}return this.child.notationToInternal(t)}notationToExternal(t){return"ERv"===t.family&&1===Math.abs(t.amount)?new i.yU(new i.VL("x",t.innerLayer,t.outerLayer),2*t.amount):"ILv"===t.family&&1===Math.abs(t.amount)?new i.yU(new i.VL("x",t.innerLayer,t.outerLayer),2*-t.amount):"Uv"===t.family?new i.yU(new i.VL("y",t.innerLayer,t.outerLayer),t.amount):"Dv"===t.family?new i.yU("y",-t.amount):this.child.notationToExternal(t)}},f=class{constructor(t){this.slices=t}notationToInternal(t){const e=t.family;return t.innerLayer||t.outerLayer||("x"===e?t=new i.yU("Rv",t.amount):"y"===e?t=new i.yU("Uv",t.amount):"z"===e&&(t=new i.yU("Fv",t.amount)),1===(1&this.slices)&&("E"===e?t=new i.yU(new i.VL("D",(this.slices+1)/2),t.amount):"M"===e?t=new i.yU(new i.VL("L",(this.slices+1)/2),t.amount):"S"===e&&(t=new i.yU(new i.VL("F",(this.slices+1)/2),t.amount))),this.slices>2&&("e"===e?t=new i.yU(new i.VL("D",this.slices-1,2),t.amount):"m"===e?t=new i.yU(new i.VL("L",this.slices-1,2),t.amount):"s"===e&&(t=new i.yU(new i.VL("F",this.slices-1,2),t.amount)))),t}notationToExternal(t){const e=t.family;if(!t.innerLayer&&!t.outerLayer){if("Rv"===e)return new i.yU("x",t.amount);if("Uv"===e)return new i.yU("y",t.amount);if("Fv"===e)return new i.yU("z",t.amount);if("Lv"===e)return new i.yU("x",-t.amount);if("Dv"===e)return new i.yU("y",-t.amount);if("Bv"===e)return new i.yU("z",-t.amount)}return t}},u={U:"frl",L:"fld",R:"fdr",B:"dlr",u:"FRL",l:"FLD",r:"FDR",b:"DLR",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R"},m={U:"FRL",L:"FLD",R:"FDR",B:"DLR",u:"frl",l:"fld",r:"fdr",b:"dlr",Uv:"FRLv",Lv:"FLDv",Rv:"FDRv",Bv:"DLRv",D:"D",F:"F",BL:"L",BR:"R",d:"d",f:"f",bl:"l",br:"r"},p={U:"FRL",L:"FLD",R:"FDR",B:"DLR"},d=new i.VL("y"),g=new i.VL("Dv"),v=class{constructor(t){(0,n.A)(this,"wcaHack",!1),(0,n.A)(this,"map",u),this.child=t}notationToInternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer){const e=p[t.family];if(e)return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount)}const e=this.map[t.family];return e?new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount):d.isIdentical(t.quantum)?new i.yU(g,-t.amount):null}notationToExternal(t){if(this.wcaHack&&2===t.innerLayer&&null===t.outerLayer)for(const[e,s]of Object.entries(p))if(this.child.spinmatch(t.family,s))return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount);for(const[e,s]of Object.entries(this.map))if(this.child.spinmatch(t.family,s))return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount);return g.isIdentical(t.quantum)?new i.yU(d,-t.amount):null}},b=class extends v{constructor(t){super(t),(0,n.A)(this,"wcaHack",!0),this.map=m}},w={U:"UBL",UL:"ULF",F:"UFR",UR:"URB",B:"DBL",D:"DFR",L:"DLF",R:"DRB",Uv:"UBLv",ULv:"ULFv",Fv:"UFRv",URv:"URBv",Bv:"DBLv",Dv:"DFRv",Lv:"DLFv",Rv:"DRBv"},y=new i.VL("x"),L=new i.VL("Rv"),B=new i.VL("Lv"),F=new i.VL("y"),x=new i.VL("Uv"),R=new i.VL("Dv"),M=new i.VL("z"),z=new i.VL("Fv"),D=new i.VL("Bv"),U=class{constructor(t){this.child=t}notationToInternal(t){if(t.innerLayer||t.outerLayer)return null;const e=w[t.family];return e?new i.yU(new i.VL(e,t.outerLayer,t.innerLayer),t.amount):y.isIdentical(t.quantum)?new i.yU(L,t.amount):F.isIdentical(t.quantum)?new i.yU(x,t.amount):M.isIdentical(t.quantum)?new i.yU(z,t.amount):null}notationToExternal(t){for(const[e,s]of Object.entries(w))if(this.child.spinmatchv(t.family,s))return new i.yU(new i.VL(e,t.innerLayer,t.outerLayer),t.amount);return L.isIdentical(t.quantum)?new i.yU(y,t.amount):B.isIdentical(t.quantum)?new i.yU(y,-t.amount):x.isIdentical(t.quantum)?new i.yU(F,t.amount):R.isIdentical(t.quantum)?new i.yU(F,-t.amount):z.isIdentical(t.quantum)?new i.yU(M,t.amount):D.isIdentical(t.quantum)?new i.yU(M,-t.amount):null}};function A(t){let e=0;const s={};for(;e<t.length&&"-"===t[e][0];){const o=t[e++];if("--rotations"===o)s.addRotations=!0;else if("--allmoves"===o)s.allMoves=!0;else if("--outerblockmoves"===o)s.outerBlockMoves=!0;else if("--vertexmoves"===o)s.vertexMoves=!0;else if("--nocorners"===o)s.includeCornerOrbits=!1;else if("--noedges"===o)s.includeEdgeOrbits=!1;else if("--noorientation"===o)s.fixedOrientation=!0;else if("--nocenters"===o)s.includeCenterOrbits=!1;else if("--omit"===o)s.excludeOrbits=t[e].split(","),e++;else if("--moves"===o)s.moveList=t[e].split(","),e++;else if("--optimize"===o)s.optimizeOrbits=!0;else if("--scramble"===o)s.scrambleAmount=100;else if("--fixcorner"===o)s.fixedPieceType="v";else if("--fixedge"===o)s.fixedPieceType="e";else if("--fixcenter"===o)s.fixedPieceType="f";else if("--orientcenters"===o)s.orientCenters=!0;else{if("--puzzleorientation"!==o)throw new Error("Bad option: ".concat(o));s.puzzleOrientation=JSON.parse(t[e]),e++}}return{puzzleDescription:ut(t.slice(e).join(" ")),options:s}}var k=class{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,n.A)(this,"verbosity",0),(0,n.A)(this,"allMoves",!1),(0,n.A)(this,"outerBlockMoves",void 0),(0,n.A)(this,"vertexMoves",!1),(0,n.A)(this,"addRotations",!1),(0,n.A)(this,"moveList",null),(0,n.A)(this,"fixedOrientation",!1),(0,n.A)(this,"fixedPieceType",null),(0,n.A)(this,"orientCenters",!1),(0,n.A)(this,"includeCornerOrbits",!0),(0,n.A)(this,"includeCenterOrbits",!0),(0,n.A)(this,"includeEdgeOrbits",!0),(0,n.A)(this,"excludeOrbits",[]),(0,n.A)(this,"optimizeOrbits",!1),(0,n.A)(this,"grayCorners",!1),(0,n.A)(this,"grayCenters",!1),(0,n.A)(this,"grayEdges",!1),(0,n.A)(this,"puzzleOrientation",null),(0,n.A)(this,"puzzleOrientations",null),(0,n.A)(this,"scrambleAmount",0),Object.assign(this,t)}},E=[],C=[];function O(t){if(!E[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=0;E[t]=e}return E[t]}function I(t){if(!C[t]){const e=Array(t);for(let s=0;s<t;s++)e[s]=s;C[t]=e}return C[t]}function P(t,e){return t/function(t,e){if(t>e){const s=t;t=e,e=s}for(;t>0;){const s=e%t;e=t,t=s}return e}(t,e)*e}var S=class t{constructor(t){(0,n.A)(this,"n",void 0),(0,n.A)(this,"p",void 0),this.n=t.length,this.p=t}toString(){return"Perm[".concat(this.p.join(" "),"]")}mul(e){const s=Array(this.n);for(let t=0;t<this.n;t++)s[t]=e.p[this.p[t]];return new t(s)}rmul(e){const s=Array(this.n);for(let t=0;t<this.n;t++)s[t]=this.p[e.p[t]];return new t(s)}inv(){const e=Array(this.n);for(let t=0;t<this.n;t++)e[this.p[t]]=t;return new t(e)}compareTo(t){for(let e=0;e<this.n;e++)if(this.p[e]!==t.p[e])return this.p[e]-t.p[e];return 0}toGap(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const o=new Array;for(let t=this.p[s];!e[t];t=this.p[t])o.push(1+t),e[t]=!0;t.push("(".concat(o.reverse().join(","),")"))}return t.join("")}toMathematica(){const t=new Array,e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;const o=new Array;for(let t=this.p[s];!e[t];t=this.p[t])o.push(1+t),e[t]=!0;t.push("{".concat(o.reverse().join(","),"}"))}return"Cycles[{".concat(t.join(","),"}]")}order(){let t=1;const e=new Array(this.n);for(let s=0;s<this.p.length;s++){if(e[s]||this.p[s]===s)continue;let o=0;for(let t=s;!e[t];t=this.p[t])o++,e[t]=!0;t=P(t,o)}return t}},T=class{constructor(t,e){this.size=t,this.mod=e}reassemblySize(){return function(t){let e=BigInt(1);for(;t>1;)e*=BigInt(t),t--;return e}(this.size)*BigInt(this.mod)**BigInt(this.size)}},N=0;function V(t,e){const s=i.yU.fromString(e),o=t.notationToExternal(s);return null===o||s===o?e:o.toString()}var j=class t{constructor(t,e,s,o,n,i,r){this.orbitnames=t,this.orbitdefs=e,this.solved=s,this.movenames=o,this.moveops=n,this.isRotation=i,this.forcenames=r}toKTransformationData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKTransformationOrbitData();return e}toKPatternData(t){const e={};for(let s=0;s<this.orbitnames.length;s++)e[this.orbitnames[s]]=t.orbits[s].toKPatternOrbitData();return e}static transformToKTransformationData(t,e){const s={};for(let o=0;o<t.length;o++)s[t[o]]=e.orbits[o].toKTransformationOrbitData();return s}describeSet(t,e,s){const o=this.orbitdefs[t].size,n=new Array(o);for(let i=0;i<o;i++)n[i]=[];for(let i=0;i<this.movenames.length;i++){if(this.isRotation[i])continue;let e=this.movenames[i];this.forcenames[i]||(e=V(s,e),"'"===e[e.length-1]&&(e=e.substring(0,e.length-1)));const r=this.moveops[i].orbits[t];for(let t=0;t<o;t++)r.perm[t]===t&&0===r.ori[t]||n[t].push(e)}for(let i=0;i<o;i++)e.push("# ".concat(i+1," ").concat(n[i].join(" ")))}toKsolve(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new a;const s=[];s.push("Name ".concat(t)),s.push("");for(let o=0;o<this.orbitnames.length;o++)s.push("Set ".concat(this.orbitnames[o]," ").concat(this.orbitdefs[o].size," ").concat(this.orbitdefs[o].mod)),this.describeSet(o,s,e);s.push(""),s.push("Solved");for(let o=0;o<this.orbitnames.length;o++)this.solved.orbits[o].appendDefinition(s,this.orbitnames[o],!1,!1);s.push("End");for(let o=0;o<this.movenames.length;o++){s.push("");let t=this.movenames[o];this.forcenames[o]||(t=V(e,this.movenames[o]));let n=!1;"'"===t[t.length-1]&&(n=!0,t=t.substring(0,t.length-1)),s.push("Move ".concat(t));for(let e=0;e<this.orbitnames.length;e++)n?this.moveops[o].orbits[e].inv().appendDefinition(s,this.orbitnames[e],!0):this.moveops[o].orbits[e].appendDefinition(s,this.orbitnames[e],!0);s.push("End")}return s}toKPuzzleDefinition(t){const e=[],s={};for(let n=0;n<this.orbitnames.length;n++){e.push({orbitName:this.orbitnames[n],numPieces:this.orbitdefs[n].size,numOrientations:this.orbitdefs[n].mod});const t=this.solved.orbits[n].toKTransformationOrbitData();s[this.orbitnames[n]]={pieces:t.permutation,orientation:t.orientationDelta}}const o={};if(t)for(let n=0;n<this.movenames.length;n++)o[this.movenames[n]]=this.toKTransformationData(this.moveops[n]);return{name:"PG3D #".concat(++N),orbits:e,defaultPattern:s,moves:o}}optimize(){const e=[],s=[],o=[],n=[];for(let t=0;t<this.moveops.length;t++)n.push([]);for(let t=0;t<this.orbitdefs.length;t++){const i=this.orbitdefs[t].mod,r=this.orbitdefs[t].size,a=new H(r),h=new Array(this.orbitdefs[t].size);for(let t=0;t<r;t++)h[t]=!1;for(let e=0;e<this.moveops.length;e++)for(let s=0;s<r;s++)this.moveops[e].orbits[t].perm[s]===s&&0===this.moveops[e].orbits[t].ori[s]||(this.isRotation[e]||(h[s]=!0),a.union(s,this.moveops[e].orbits[t].perm[s]));let l=!0;if(i>1){l=!1;const e=new H(this.orbitdefs[t].size*i);for(let s=0;s<this.moveops.length;s++)for(let o=0;o<r;o++)if(this.moveops[s].orbits[t].perm[o]!==o||0!==this.moveops[s].orbits[t].ori[o])for(let n=0;n<i;n++)e.union(o*i+n,this.moveops[s].orbits[t].perm[o]*i+(n+this.moveops[s].orbits[t].ori[o])%i);for(let t=0;!l&&t<r;t++)for(let s=1;s<i;s++)e.find(t*i)===e.find(t*i+s)&&(l=!0);for(let s=0;!l&&s<r;s++)for(let e=0;e<s;e++)this.solved.orbits[t].perm[s]===this.solved.orbits[t].perm[e]&&(l=!0)}let c=-1,f=!1;for(let e=0;e<this.orbitdefs[t].size;e++)if(h[e]){const t=a.find(e);c<0?c=t:c!==t&&(f=!0)}for(let u=0;u<this.orbitdefs[t].size;u++){if(!h[u])continue;if(a.find(u)!==u)continue;const i=[],r=[];let c=0;for(let e=0;e<this.orbitdefs[t].size;e++)a.find(e)===u&&(i[c]=e,r[e]=c,c++);if(f?e.push("".concat(this.orbitnames[t],"_p").concat(u)):e.push(this.orbitnames[t]),l){s.push(new T(c,this.orbitdefs[t].mod)),o.push(this.solved.orbits[t].remapVS(i,c));for(let e=0;e<this.moveops.length;e++)n[e].push(this.moveops[e].orbits[t].remap(i,r,c))}else{s.push(new T(c,1)),o.push(this.solved.orbits[t].remapVS(i,c).killOri());for(let e=0;e<this.moveops.length;e++)n[e].push(this.moveops[e].orbits[t].remap(i,r,c).killOri())}}}return new t(e,s,new _(o),this.movenames,n.map((t=>new q(t))),this.isRotation,this.forcenames)}scramble(t){this.solved=this.solved.mul(this.getScrambleTransformation(t))}getScrambleTransformation(t){t<100&&(t=100);const e=[];for(let o=0;o<this.moveops.length;o++)e[o]=this.moveops[o];for(let o=0;o<e.length;o++){const t=Math.floor(Math.random()*e.length),s=e[o];e[o]=e[t],e[t]=s}t<e.length&&(t=e.length);for(let o=0;o<t;o++){const t=Math.floor(Math.random()*e.length),s=Math.floor(Math.random()*e.length),o=Math.floor(Math.random()*this.moveops.length);e[t]=e[t].mul(e[s]).mul(this.moveops[o]),Math.random()<.1&&(e[t]=e[t].mul(this.moveops[o]))}let s=e[0];for(let o=1;o<e.length;o++)s=s.mul(e[o]);return s}reassemblySize(){let t=BigInt(1);for(let e=0;e<this.orbitdefs.length;e++)t*=this.orbitdefs[e].reassemblySize();return t}},G=(o=class t{constructor(t,e,s){this.perm=t,this.ori=e,this.orimod=s}static e(e,s){return new t(I(e),O(e),s)}mul(e){const s=this.perm.length,o=new Array(s);if(1===this.orimod){for(let t=0;t<s;t++)o[t]=this.perm[e.perm[t]];return new t(o,this.ori,this.orimod)}{const n=new Array(s);for(let t=0;t<s;t++)o[t]=this.perm[e.perm[t]],n[t]=(this.ori[e.perm[t]]+e.ori[t])%this.orimod;return new t(o,n,this.orimod)}}inv(){const e=this.perm.length,s=new Array(e),o=new Array(e);for(let t=0;t<e;t++)s[this.perm[t]]=t,o[this.perm[t]]=(this.orimod-this.ori[t])%this.orimod;return new t(s,o,this.orimod)}equal(t){const e=this.perm.length;for(let s=0;s<e;s++)if(this.perm[s]!==t.perm[s]||this.ori[s]!==t.ori[s])return!1;return!0}killOri(){const t=this.perm.length;for(let e=0;e<t;e++)this.ori[e]=0;return this.orimod=1,this}toPerm(){const t=this.orimod;if(1===t)return new S(this.perm);const e=this.perm.length,s=new Array(e*t);for(let o=0;o<e;o++)for(let e=0;e<t;e++)s[o*t+e]=t*this.perm[o]+(this.ori[o]+e)%t;return new S(s)}identicalPieces(){const t=[],e=this.perm.length,s=[];for(let o=0;o<e;o++){const n=this.perm[o];if(void 0===t[n]){const i=[o];t[n]=!0;for(let t=o+1;t<e;t++)this.perm[t]===n&&i.push(t);s.push(i)}}return s}order(){return this.toPerm().order()}isIdentity(){const t=this.perm.length;if(this.perm===I(t)&&this.ori===O(t))return!0;for(let e=0;e<t;e++)if(this.perm[e]!==e||0!==this.ori[e])return!1;return!0}zeroOris(){const t=this.perm.length;if(this.ori===O(t))return!0;for(let e=0;e<t;e++)if(0!==this.ori[e])return!1;return!0}remap(e,s,o){const n=new Array(o),i=new Array(o);for(let t=0;t<o;t++)n[t]=s[this.perm[e[t]]],i[t]=this.ori[e[t]];return new t(n,i,this.orimod)}remapVS(e,s){const o=new Array(s),n=new Array(s);let i=0;const r=[];for(let t=0;t<s;t++){const s=this.perm[e[t]];void 0===r[s]&&(r[s]=i++),o[t]=r[s],n[t]=this.ori[e[t]]}return new t(o,n,this.orimod)}appendDefinition(t,e,s){if((!(!(arguments.length>3&&void 0!==arguments[3])||arguments[3])||!this.isIdentity())&&(t.push(e),t.push(this.perm.map((t=>t+1)).join(" ")),!this.zeroOris()))if(s){const e=new Array(this.ori.length);for(let t=0;t<e.length;t++)e[this.perm[t]]=this.ori[t];t.push(e.join(" "))}else t.push(this.ori.join(" "))}toKTransformationOrbitData(){const e=this.perm.length;return this.isIdentity()?(t.ktransformationCache[e]||(t.ktransformationCache[e]={permutation:I(e),orientationDelta:O(e)}),t.ktransformationCache[e]):{permutation:this.perm,orientationDelta:this.ori}}toKPatternOrbitData(){const t=this.perm.length;return{pieces:this.perm,orientation:this.ori,orientationMod:O(t)}}},(0,n.A)(o,"ktransformationCache",[]),o),K=class{constructor(t){this.orbits=t}internalMul(t){const e=[];for(let s=0;s<this.orbits.length;s++)e.push(this.orbits[s].mul(t.orbits[s]));return e}internalInv(){const t=[];for(const e of this.orbits)t.push(e.inv());return t}equal(t){for(let e=0;e<this.orbits.length;e++)if(!this.orbits[e].equal(t.orbits[e]))return!1;return!0}killOri(){for(const t of this.orbits)t.killOri();return this}toPerm(){const t=new Array;let e=0;for(const o of this.orbits){const s=o.toPerm();t.push(s),e+=s.n}const s=new Array(e);e=0;for(const o of t){for(let t=0;t<o.n;t++)s[e+t]=e+o.p[t];e+=o.n}return new S(s)}identicalPieces(){const t=[];let e=0;for(const s of this.orbits){const o=s.orimod,n=s.identicalPieces();for(let s=0;s<n.length;s++)t.push(n[s].map((t=>t*o+e)));e+=o*s.perm.length}return t}order(){let t=1;for(const e of this.orbits)t=P(t,e.order());return t}},q=class t extends K{mul(e){return new t(this.internalMul(e))}mulScalar(t){if(0===t)return this.e();let e=this;for(t<0&&(e=e.inv(),t=-t);0===(1&t);)e=e.mul(e),t>>=1;if(1===t)return e;let s=e,o=this.e();for(;t>0;)1&t&&(o=o.mul(s)),t>1&&(s=s.mul(s)),t>>=1;return o}inv(){return new t(this.internalInv())}e(){return new t(this.orbits.map((t=>G.e(t.perm.length,t.orimod))))}},_=class t extends K{mul(e){return new t(this.internalMul(e))}},H=class{constructor(t){(0,n.A)(this,"heads",void 0),this.n=t,this.heads=new Array(t);for(let e=0;e<t;e++)this.heads[e]=e}find(t){let e=this.heads[t];return this.heads[e]===e||(e=this.find(this.heads[e]),this.heads[t]=e),e}union(t,e){const s=this.find(t),o=this.find(e);s<o?this.heads[o]=s:s>o&&(this.heads[s]=o)}};var J={"2x2x2":"c f 0","3x3x3":"c f 0.333333333333333","4x4x4":"c f 0.5 f 0","5x5x5":"c f 0.6 f 0.2","6x6x6":"c f 0.666666666666667 f 0.333333333333333 f 0","7x7x7":"c f 0.714285714285714 f 0.428571428571429 f 0.142857142857143","8x8x8":"c f 0.75 f 0.5 f 0.25 f 0","9x9x9":"c f 0.777777777777778 f 0.555555555555556 f 0.333333333333333 f 0.111111111111111","10x10x10":"c f 0.8 f 0.6 f 0.4 f 0.2 f 0","11x11x11":"c f 0.818181818181818 f 0.636363636363636 f 0.454545454545455 f 0.272727272727273 f 0.0909090909090909","12x12x12":"c f 0.833333333333333 f 0.666666666666667 f 0.5 f 0.333333333333333 f 0.166666666666667 f 0","13x13x13":"c f 0.846153846153846 f 0.692307692307692 f 0.538461538461538 f 0.384615384615385 f 0.230769230769231 f 0.0769230769230769","20x20x20":"c f 0 f .1 f .2 f .3 f .4 f .5 f .6 f .7 f .8 f .9","30x30x30":"c f 0 f .066667 f .133333 f .2 f .266667 f .333333 f .4 f .466667 f .533333 f .6 f .666667 f .733333 f .8 f .866667 f .933333","40x40x40":"c f 0 f .05 f .1 f .15 f .2 f .25 f .3 f .35 f .4 f .45 f .5 f .55 f .6 f .65 f .7 f .75 f .8 f .85 f .9 f .95",skewb:"c v 0","master skewb":"c v 0.275","professor skewb":"c v 0 v 0.38","compy cube":"c v 0.915641442663986",helicopter:"c e 0.707106781186547","curvy copter":"c e 0.83",dino:"c v 0.577350269189626","little chop":"c e 0",pyramorphix:"t e 0",mastermorphix:"t e 0.346184634065199",pyraminx:"t v 0.333333333333333 v 1.66666666666667",tetraminx:"t v 0.333333333333333","master pyraminx":"t v 0 v 1 v 2","master tetraminx":"t v 0 v 1","professor pyraminx":"t v -0.2 v 0.6 v 1.4 v 2.2","professor tetraminx":"t v -0.2 v 0.6 v 1.4","royal pyraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667 v 2.33333333333333","royal tetraminx":"t v -0.333333333333333 v 0.333333333333333 v 1 v 1.66666666666667","emperor pyraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286 v 2.42857142857143","emperor tetraminx":"t v -0.428571428571429 v 0.142857142857143 v 0.714285714285714 v 1.28571428571429 v 1.85714285714286","Jing pyraminx":"t f 0","master pyramorphix":"t e 0.866025403784437",megaminx:"d f 0.7",gigaminx:"d f 0.64 f 0.82",teraminx:"d f 0.64 f 0.76 f 0.88",petaminx:"d f 0.64 f 0.73 f 0.82 f 0.91",examinx:"d f 0.64 f 0.712 f 0.784 f 0.856 f 0.928",zetaminx:"d f 0.64 f 0.7 f 0.76 f 0.82 f 0.88 f 0.94",yottaminx:"d f 0.64 f 0.6914 f 0.7429 f 0.7943 f 0.8457 f 0.8971 f 0.9486",pentultimate:"d f 0","master pentultimate":"d f 0.1","elite pentultimate":"d f 0 f 0.145905",starminx:"d v 0.937962370425399","starminx 2":"d f 0.23606797749979","pyraminx crystal":"d f 0.447213595499989",chopasaurus:"d v 0","big chop":"d e 0","skewb diamond":"o f 0",FTO:"o f 0.333333333333333","master FTO":"o f 0.5 f 0","Christopher's jewel":"o v 0.577350269189626",octastar:"o e 0","Trajber's octahedron":"o v 0.433012701892219","radio chop":"i f 0",icosamate:"i v 0","icosahedron 2":"i v 0.18759247376021","icosahedron 3":"i v 0.18759247376021 e 0","icosahedron static faces":"i v 0.84","icosahedron moving faces":"i v 0.73","Eitan's star":"i f 0.61803398874989","2x2x2 + dino":"c f 0 v 0.577350269189626","2x2x2 + little chop":"c f 0 e 0","dino + little chop":"c v 0.577350269189626 e 0","2x2x2 + dino + little chop":"c f 0 v 0.577350269189626 e 0","megaminx + chopasaurus":"d f 0.61803398875 v 0","starminx combo":"d f 0.23606797749979 v 0.937962370425399"},Q=1e-9;function W(t){let e=new X(0,0,0,0);for(let s=0;s<t.length;s++)e=e.sum(t[s]);return e.smul(1/t.length)}function Z(t,e,s,o){const n=o[t].intersect3(o[e],o[s]);if(!n)return n;for(let i=0;i<o.length;i++)if(i!==t&&i!==e&&i!==s){const t=o[i].b*n.b+o[i].c*n.c+o[i].d*n.d;if(o[i].a>0&&t>o[i].a||o[i].a<0&&t<o[i].a)return!1}return n}var X=class t{constructor(t,e,s,o){this.a=t,this.b=e,this.c=s,this.d=o}mul(e){return new t(this.a*e.a-this.b*e.b-this.c*e.c-this.d*e.d,this.a*e.b+this.b*e.a+this.c*e.d-this.d*e.c,this.a*e.c-this.b*e.d+this.c*e.a+this.d*e.b,this.a*e.d+this.b*e.c-this.c*e.b+this.d*e.a)}toString(){return"Q[".concat(this.a,",").concat(this.b,",").concat(this.c,",").concat(this.d,"]")}dist(t){return Math.hypot(this.a-t.a,this.b-t.b,this.c-t.c,this.d-t.d)}len(){return Math.hypot(this.a,this.b,this.c,this.d)}cross(e){return new t(0,this.c*e.d-this.d*e.c,this.d*e.b-this.b*e.d,this.b*e.c-this.c*e.b)}dot(t){return this.b*t.b+this.c*t.c+this.d*t.d}normalize(){const e=Math.sqrt(this.dot(this));return new t(this.a/e,this.b/e,this.c/e,this.d/e)}makenormal(){return new t(0,this.b,this.c,this.d).normalize()}normalizeplane(){const e=Math.hypot(this.b,this.c,this.d);return new t(this.a/e,this.b/e,this.c/e,this.d/e)}smul(e){return new t(this.a*e,this.b*e,this.c*e,this.d*e)}sum(e){return new t(this.a+e.a,this.b+e.b,this.c+e.c,this.d+e.d)}sub(e){return new t(this.a-e.a,this.b-e.b,this.c-e.c,this.d-e.d)}angle(){return 2*Math.acos(this.a)}invrot(){return new t(this.a,-this.b,-this.c,-this.d)}det3x3(t,e,s,o,n,i,r,a,h){return t*(n*h-i*a)+e*(i*r-o*h)+s*(o*a-n*r)}rotateplane(e){const s=e.mul(new t(0,this.b,this.c,this.d)).mul(e.invrot());return s.a=this.a,s}orthogonal(){const e=Math.abs(this.b),s=Math.abs(this.c),o=Math.abs(this.d);return e<s&&e<o?this.cross(new t(0,1,0,0)).normalize():s<e&&s<o?this.cross(new t(0,0,1,0)).normalize():this.cross(new t(0,0,0,1)).normalize()}pointrotation(e){const s=this.normalize();if(e=e.normalize(),s.sub(e).len()<Q)return new t(1,0,0,0);let o=s.sum(e);o=o.len()<Q?o.orthogonal():o.normalize();const n=s.cross(o);return n.a=s.dot(o),n}unproject(t){return this.sum(t.smul(-this.dot(t)/(this.len()*t.len())))}rotatepoint(t){return t.mul(this).mul(t.invrot())}rotateface(t){return t.map((t=>t.rotatepoint(this)))}intersect3(e,s){const o=this.det3x3(this.b,this.c,this.d,e.b,e.c,e.d,s.b,s.c,s.d);return!(Math.abs(o)<Q)&&new t(0,this.det3x3(this.a,this.c,this.d,e.a,e.c,e.d,s.a,s.c,s.d)/o,this.det3x3(this.b,this.a,this.d,e.b,e.a,e.d,s.b,s.a,s.d)/o,this.det3x3(this.b,this.c,this.a,e.b,e.c,e.a,s.b,s.c,s.a)/o)}side(t){return t>Q?1:t<-Q?-1:0}cutface(t){const e=this.a;let s=0,o=null;for(let n=0;n<t.length;n++)s|=1<<this.side(t[n].dot(this)-e)+1;if(5===(5&s)){o=[];const s=t.map((t=>this.side(t.dot(this)-e)));for(let n=-1;n<=1;n+=2){const i=[];for(let o=0;o<t.length;o++){s[o]!==n&&0!==s[o]||i.push(t[o]);const r=(o+1)%t.length;if(s[o]+s[r]===0&&0!==s[o]){const s=t[o].dot(this)-e,n=s/(s-(t[r].dot(this)-e)),a=t[o].smul(1-n).sum(t[r].smul(n));i.push(a)}}o.push(i)}}return o}cutfaces(t){const e=[];for(let s=0;s<t.length;s++){const o=t[s],n=this.cutface(o);n?(e.push(n[0]),e.push(n[1])):e.push(o)}return e}faceside(t){const e=this.a;for(let s=0;s<t.length;s++){const o=this.side(t[s].dot(this)-e);if(0!==o)return o}throw new Error("Could not determine side of plane in faceside")}sameplane(t){const e=this.normalize(),s=t.normalize();return e.dist(s)<Q||e.dist(s.smul(-1))<Q}makecut(e){return new t(e,this.b,this.c,this.d)}},Y=1e-9;function $(t,e){const s=[],o=[];for(let n=0;n<e.length;n++){const i=t.rotateplane(e[n]);let r=!1;for(let t=0;t<s.length;t++)if(i.dist(s[t])<Y){r=!0;break}r||(s.push(i),o.push(e[n]))}return o}function tt(t){const e=[];for(let s=1;s<t.length;s++)for(let o=s+1;o<t.length;o++){const n=Z(0,s,o,t);if(n){let t=!1;for(let s=0;s<e.length;s++)if(n.dist(e[s])<Y){t=!0;break}t||e.push(n)}}for(;;){let s=!1;for(let o=0;o<e.length;o++){const n=(o+1)%e.length;if(t[0].dot(e[o].cross(e[n]))<0){const t=e[o];e[o]=e[n],e[n]=t,s=!0}}if(!s)break}return e}var et=class{constructor(){(0,n.A)(this,"mult",void 0),this.mult=[]}multiply(t){for(let e=2;e*e<=t;e++)for(;t%e===0;)void 0!==this.mult[e]?this.mult[e]++:this.mult[e]=1,t/=e;t>1&&(void 0!==this.mult[t]?this.mult[t]++:this.mult[t]=1)}toString(){let t="";for(let e=0;e<this.mult.length;e++)void 0!==this.mult[e]&&(""!==t&&(t+="*"),t+=e,this.mult[e]>1&&(t+="^".concat(this.mult[e])));return t}};function st(t,e){const s=t[0].p.length,o=function(t){return new S(I(t))}(s);let n=[],i=[],r=[],a=[],h=[];function l(t,e,s){a[t].push(e),h[t].push(s);for(let o=0;o<n[t].length;o++)n[t][o]&&c(t,n[t][o].mul(e),s+r[t][o])}function c(t,e,s){const o=e.p[t];if(!n[t][o]){n[t][o]=e,i[t][o]=e.inv(),r[t][o]=s;for(let o=0;o<a[t].length;o++)c(t,e.mul(a[t][o]),s+h[t][o]);return}const f=e.mul(i[t][o]);(function(t){for(let e=t.p.length-1;e>=0;e--){const s=t.p[e];if(s!==e){if(!n[e][s])return!1;t=t.mul(i[e][s])}}return!0})(f)||l(t-1,f,s+r[t][o])}return function(){n=[],i=[],a=[],r=[],h=[];for(let t=0;t<s;t++)n.push([]),i.push([]),r.push([]),a.push([]),h.push([]),n[t][t]=o,i[t][t]=o,r[t][t]=0;let c=0,f=BigInt(1);for(let o=0;o<t.length;o++){l(s-1,t[o],1),f=BigInt(1);let i=0,h=0;const u=[],m=new et;for(let t=0;t<s;t++){let e=0,o=0;for(let i=0;i<s;i++)n[t][i]&&(e++,o+=r[t][i],t!==i&&c++);i+=a[t].length,f*=BigInt(e),e>1&&m.multiply(e);const l=o/e;u.push(l),h+=l}e("".concat(o,": sz ").concat(f," T ").concat(i," sol ").concat(h," none ").concat(c," mults ").concat(m.toString()))}return f}()}var ot=class t{constructor(t){(0,n.A)(this,"coords",void 0),(0,n.A)(this,"length",void 0),this.coords=new Array(3*t.length);for(let e=0;e<t.length;e++)this.coords[3*e]=t[e].b,this.coords[3*e+1]=t[e].c,this.coords[3*e+2]=t[e].d;this.length=t.length}get(t){return new X(0,this.coords[3*t],this.coords[3*t+1],this.coords[3*t+2])}centermass(){let t=0,e=0,s=0;for(let o=0;o<this.length;o++)t+=this.coords[3*o],e+=this.coords[3*o+1],s+=this.coords[3*o+2];return new X(0,t/this.length,e/this.length,s/this.length)}rotate(e){const s=[];for(let t=0;t<this.length;t++)s.push(this.get(t).rotatepoint(e));return new t(s)}rotateforward(){const e=[];for(let t=1;t<this.length;t++)e.push(this.get(t));return e.push(this.get(0)),new t(e)}},nt=class t{constructor(t,e,s){this.face=t,this.left=e,this.right=s}split(e){const s=e.cutface(this.face);var o,n;null!==s&&(void 0===this.left?(this.left=new t(s[0]),this.right=new t(s[1])):(this.left=null===(o=this.left)||void 0===o?void 0:o.split(e),this.right=null===(n=this.right)||void 0===n?void 0:n.split(e)));return this}collect(t,e){if(void 0===this.left)t.push(new ot(this.face));else if(e){var s,o;null===(s=this.left)||void 0===s||s.collect(t,!1),null===(o=this.right)||void 0===o||o.collect(t,!0)}else{var n,i;null===(n=this.right)||void 0===n||n.collect(t,!1),null===(i=this.left)||void 0===i||i.collect(t,!0)}return t}};var it=1e-9;var rt={4:{v:["DFR","DLF","DRL","FLR"],e:["FR","LF","DF","DL","RD","RL"],c:["DF","FD","RL","LR"]},6:{v:["URF","UBR","ULB","UFL","DFR","DRB","DBL","DLF"],e:["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],c:["UB","LU","FU","RU","BU","DF"]},8:{v:["UBBBRR","URFL","ULBLBB","DBRBBBL","DBLLF","DFRBR"],e:["UL","UBB","UR","BRD","BLD","FD","BRR","FR","FL","BLL","BLBB","BRBB"],c:["BBU","LU","RU","BRD","FD","BLD","DF","UBB"]},12:{v:["URF","UFL","ULBL","UBLBR","UBRR","DEBF","DBFI","DIA","DAC","DCE","LAI","ALF","FCA","CFR","REC","ERBR","BRBFE","BFBRBL","BLIBF","IBLL"],e:["UF","UR","UBR","UBL","UL","ER","EBR","EBF","ED","EC","IBF","IBL","IL","IA","ID","AC","CF","FA","BFBR","BRBL","BLBF","CD","AD","AL","FL","FR","CR","BFD","BRR","BLL"],c:["UF","FU","DBF","BFD","AD","CD","BRU","BLU","LA","RA","EBR","IBL"]},20:{v:["FLPQU","FUGER","FRCAL","HCREI","ISBDH","JSIEG","BSJMK","MQPOK","ONDBK","NOPLA","UQMJG","DNACH"],e:["FU","FL","FR","EG","ER","EI","SJ","SI","SB","KM","KB","KO","PQ","PO","PL","UG","JG","MQ","UQ","HC","HD","ND","NA","JM","CA","AL","CR","HI","DB","NO"],c:["FU","UF","GE","EG","JS","SJ","MK","KM","QP","PQ","LA","AL","RC","CR","IH","HI","BD","DB","ON","NO"]}};function at(t,e){for(let s=0;s<t.length;s++)if(t[s][0].dist(e)<it)return s;throw new Error("Element not found")}function ht(){return J}function lt(t){return J[t]}var ct=["c","t","o","d","i"],ft=["f","v","e"];function ut(t){const e=t.split(/ /).filter(Boolean);if(e.length%2===0)return null;const s=e[0];if("o"!==s&&"c"!==s&&"i"!==s&&"d"!==s&&"t"!==s)return null;const o=[];for(let n=1;n<e.length;n+=2){if("f"!==e[n]&&"v"!==e[n]&&"e"!==e[n])return null;o.push({cutType:e[n],distance:parseFloat(e[n+1])})}return{shape:s,cuts:o}}function mt(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};const s=ut(t);if(null===s)throw new Error("Could not parse the puzzle description");const o=new wt(s,Object.assign({},{allMoves:!0},e));return o.allstickers(),o.genperms(),o}function pt(t,e){return mt(J[t],e)}function dt(t,e,s){let o=!1;s-e[1]<e[0]&&(t=[t[2],t[3],t[0],t[1]],e=[s-e[1],s-e[0]],o=!0);let n=t[0],i="";if(0===e[0]&&e[1]===s)n="".concat(n,"v");else if(e[0]===e[1])e[1]>0&&(i=String(e[1]+1));else{if(0!==e[0])throw new Error("We only support slice and outer block moves right now. ".concat(e));n=n.toLowerCase(),e[1]>1&&(i=String(e[1]+1))}return[i+n,o]}function gt(t,e){const s=[];let o=0;for(;o<t.length;){o>0&&o<t.length&&"_"===t[o]&&o++;let n="";for(const s of e)t.substr(o).startsWith(s[1])&&s[1].length>n.length&&(n=s[1]);if(""===n)throw new Error("Could not split ".concat(t," into face names."));s.push(n),o+=n.length}return s}function vt(t,e){return[t.b/e,-t.c/e,t.d/e]}function bt(t,e){const s=[],o=t.length;for(let n=0;n<o;n++){const i=vt(t.get(o-n-1),e);s[3*n]=i[0],s[3*n+1]=i[1],s[3*n+2]=i[2]}return s}var wt=class{constructor(t,e){(0,n.A)(this,"rotations",void 0),(0,n.A)(this,"baseplanerot",void 0),(0,n.A)(this,"baseplanes",void 0),(0,n.A)(this,"facenames",void 0),(0,n.A)(this,"faceplanes",void 0),(0,n.A)(this,"edgenames",void 0),(0,n.A)(this,"vertexnames",void 0),(0,n.A)(this,"geonormals",void 0),(0,n.A)(this,"moveplanes",void 0),(0,n.A)(this,"moveplanes2",void 0),(0,n.A)(this,"moveplanesets",void 0),(0,n.A)(this,"moveplanenormals",void 0),(0,n.A)(this,"movesetorders",void 0),(0,n.A)(this,"movesetgeos",void 0),(0,n.A)(this,"basefaces",void 0),(0,n.A)(this,"faces",void 0),(0,n.A)(this,"facecentermass",void 0),(0,n.A)(this,"baseFaceCount",void 0),(0,n.A)(this,"stickersperface",void 0),(0,n.A)(this,"shortedge",void 0),(0,n.A)(this,"markedface",void 0),(0,n.A)(this,"cubies",void 0),(0,n.A)(this,"vertexdistance",void 0),(0,n.A)(this,"edgedistance",void 0),(0,n.A)(this,"facetocubie",void 0),(0,n.A)(this,"facetoord",void 0),(0,n.A)(this,"moverotations",void 0),(0,n.A)(this,"facelisthash",void 0),(0,n.A)(this,"cubiesetnames",void 0),(0,n.A)(this,"cubieords",void 0),(0,n.A)(this,"cubiesetnums",void 0),(0,n.A)(this,"cubieordnums",void 0),(0,n.A)(this,"orbitoris",void 0),(0,n.A)(this,"cubievaluemap",void 0),(0,n.A)(this,"cubiesetcubies",void 0),(0,n.A)(this,"cmovesbyslice",[]),(0,n.A)(this,"parsedmovelist",void 0),(0,n.A)(this,"duplicatedFaces",[]),(0,n.A)(this,"duplicatedCubies",[]),(0,n.A)(this,"fixedCubie",-1),(0,n.A)(this,"net",[]),(0,n.A)(this,"colors",[]),(0,n.A)(this,"swizzler",void 0),(0,n.A)(this,"notationMapper",new a),(0,n.A)(this,"addNotationMapper",""),(0,n.A)(this,"setReidOrder",!1),(0,n.A)(this,"options",void 0),this.puzzleDescription=t;this.options=new k(e),this.options.verbosity>0&&console.log(this.header("# ")),this.create(t)}create(t){const{shape:e,cuts:s}=t;this.moveplanes=[],this.moveplanes2=[],this.faces=[],this.cubies=[];let o=null;switch(e){case"c":o=function(){const t=Math.sqrt(.5);return[new X(t,t,0,0),new X(t,0,t,0)]}();break;case"o":o=function(){const t=Math.sqrt(.5);return[new X(.5,.5,.5,.5),new X(t,0,0,t)]}();break;case"i":o=function(){let t=1/6+Math.sqrt(5)/6,e=2/3+Math.sqrt(5)/3;const s=Math.sqrt(t*t+e*e);t/=s,e/=s;const o=2*Math.PI/6;return[new X(Math.cos(o),t*Math.sin(o),e*Math.sin(o),0),new X(Math.cos(o),-t*Math.sin(o),e*Math.sin(o),0)]}();break;case"t":o=[new X(.5,.5,.5,.5),new X(.5,.5,.5,-.5)];break;case"d":o=function(){const t=2*Math.PI/10;let e=.5+.3*Math.sqrt(5),s=.5+.1*Math.sqrt(5);const o=Math.sqrt(e*e+s*s);return e/=o,s/=o,[new X(Math.cos(t),e*Math.sin(t),s*Math.sin(t),0),new X(.5,.5,.5,.5)]}();break;default:throw new Error("Bad shape argument: ".concat(e))}this.rotations=function(t){const e=[new X(1,0,0,0)];for(let s=0;s<e.length;s++)for(let o=0;o<t.length;o++){const n=t[o].mul(e[s]),i=n.smul(-1);let r=!1;for(let t=0;t<e.length;t++)if(n.dist(e[t])<Y||i.dist(e[t])<Y){r=!0;break}r||e.push(n)}return e}(o),this.options.verbosity&&console.log("# Rotations: ".concat(this.rotations.length));const n=o[0];this.baseplanerot=$(n,this.rotations);const i=this.baseplanerot.map((t=>n.rotateplane(t)));this.baseplanes=i,this.baseFaceCount=i.length;const a={4:[["F","D","L","R"]],6:[["F","D","L","U","R"],["R","F","","B",""]],8:[["F","D","L","R"],["D","F","BR",""],["BR","D","","BB"],["BB","BR","U","BL"]],12:[["U","F","","","",""],["F","U","R","C","A","L"],["R","F","","","E",""],["E","R","","BF","",""],["BF","E","BR","BL","I","D"]],20:[["R","C","F","E"],["F","R","L","U"],["L","F","A",""],["E","R","G","I"],["I","E","S","H"],["S","I","J","B"],["B","S","K","D"],["K","B","M","O"],["O","K","P","N"],["P","O","Q",""]]}[i.length];this.net=a,this.colors={4:{F:"#44ee00",D:"#f4f400",L:"#ff0000",R:"#2266ff"},6:{U:"#ffffff",F:"#44ee00",R:"#ff0000",D:"#f4f400",B:"#2266ff",L:"#ff8000"},8:{U:"#ffffff",F:"#ff0000",R:"#44ee00",D:"#f4f400",BB:"#2266ff",L:"#8800dd",BL:"#ff8000",BR:"#aaaaaa"},12:{U:"#ffffff",F:"#008800",R:"#ff0000",C:"#e8d0a0",A:"#3399ff",L:"#8800dd",E:"#ff66cc",BF:"#99ff00",BR:"#0000ff",BL:"#f4f400",I:"#ff8000",D:"#aaaaaa"},20:{R:"#db69f0",C:"#178fde",F:"#23238b",E:"#9cc726",L:"#2c212d",U:"#177fa7",A:"#e0de7f",G:"#2b57c0",I:"#41126b",S:"#4b8c28",H:"#7c098d",J:"#7fe7b4",B:"#85fb74",K:"#3f4bc3",D:"#0ff555",M:"#f1c2c8",O:"#58d340",P:"#c514f2",N:"#14494e",Q:"#8b1be1"}}[i.length],this.options.verbosity>0&&console.log("# Base planes: ".concat(i.length));const h=tt(i),c=new X(0,0,0,0);this.options.verbosity>0&&console.log("# Face vertices: ".concat(h.length));const f=i[0].makenormal(),u=h[0].sum(h[1]).makenormal(),m=h[0].makenormal(),p=new X(1,f.b,f.c,f.d);this.options.verbosity>0&&console.log("# Boundary is ".concat(p));const d=tt($(p,this.rotations).map((t=>p.rotateplane(t))));this.edgedistance=d[0].sum(d[1]).smul(.5).dist(c),this.vertexdistance=d[0].dist(c);const g=[],v=[];let b=!1,w=!1,y=!1;for(const r of s){let t=null,e=0;switch(r.cutType){case"f":t=f,e=1,b=!0;break;case"v":t=m,e=this.vertexdistance,y=!0;break;case"e":t=u,e=this.edgedistance,w=!0;break;default:throw new Error("Bad cut argument: ".concat(r.cutType))}g.push(t.makecut(r.distance)),v.push(r.distance<e)}this.options.addRotations&&(b||g.push(f.makecut(10)),y||g.push(m.makecut(10)),w||g.push(u.makecut(10))),this.basefaces=[];for(const r of this.baseplanerot){const t=r.rotateface(d);this.basefaces.push(new ot(t))}const L=[],B=[],F=[],x=[],R=d.length;function M(t,e,s){for(const o of t)if(o[0].dist(e)<it)return void o.push(s);t.push([e,s])}for(let r=0;r<this.baseplanerot.length;r++){const t=this.baseplanerot[r].rotateface(d);for(let e=0;e<t.length;e++){const s=(e+1)%t.length;M(x,t[e].sum(t[s]).smul(.5),r)}}const z=[];for(let r=0;r<this.baseplanerot.length;r++){const t=this.baseplanerot[r].rotateface(d),e=[];for(let s=0;s<t.length;s++){const o=(s+1)%t.length,n=x[at(x,t[s].sum(t[o]).smul(.5))];if(r===n[1])e.push(n[2]);else{if(r!==n[2])throw new Error("Could not find edge");e.push(n[1])}}z.push(e)}const D={},U=[];U.push(a[0][0]),D[a[0][0]]=0,U[z[0][0]]=a[0][1],D[a[0][1]]=z[0][0];for(const r of a){const t=D[r[0]];if(void 0===t)throw new Error("Bad edge description; first edge not connected");let e=-1;for(let s=0;s<z[t].length;s++){const o=U[z[t][s]];if(void 0!==o&&o===r[1]){e=s;break}}if(e<0)throw new Error("First element of a net not known");for(let s=2;s<r.length;s++){if(""===r[s])continue;const o=z[t][(s+e-1)%R],n=U[o];if(void 0!==n&&n!==r[s])throw new Error("Face mismatch in net");U[o]=r[s],D[r[s]]=o}}for(let r=0;r<this.baseplanerot.length;r++){const t=this.baseplanerot[r].rotateface(d),e=p.rotateplane(this.baseplanerot[r]),s=U[r];L.push([t,s]),B.push([e,s])}for(let r=0;r<this.baseplanerot.length;r++){const t=this.baseplanerot[r].rotateface(d),e=U[r];for(let s=0;s<t.length;s++){const o=(s+1)%t.length,n=t[s].sum(t[o]).smul(.5),i=(s+2)%t.length,r=t[o].sum(t[i]).smul(.5),a=at(x,n),h=at(x,r);M(F,t[o],[e,h,a])}}this.swizzler=new r(L.map((t=>t[1])));const A=this.swizzler.prefixFree?"":"_",k=rt[this.baseFaceCount],E=[];for(let r=0;r<this.baseFaceCount;r++)E[1<<r]=r;{const t=k.v;for(const e of t){const t=this.swizzler.splitByFaceNames(e);let s=0;for(const e of t)s|=1<<e;E[s]=t[0]}}{const t=k.e;for(const e of t){const t=this.swizzler.splitByFaceNames(e);let s=0;for(const e of t)s|=1<<e;E[s]=t[0]}}{const t=k.c;for(const e of t){const t=this.swizzler.splitByFaceNames(e);E[1<<t[0]|1<<this.baseFaceCount]=t[1]}}for(let r=0;r<x.length;r++){if(3!==x[r].length)throw new Error("Bad length in edge names ".concat(x[r]));const t=x[r][1],e=x[r][2];let s=U[t];const o=U[e];s=E[1<<t|1<<e]===t?s+A+o:o+A+s,x[r]=[x[r][0],s]}for(let r=0;r<F.length;r++){let t=0;if(F[r].length<4)throw new Error("Bad length in vertex names");for(let n=1;n<F[r].length;n++)t|=1<<D[F[r][n][0]];const e=E[t];let s=-1;for(let n=1;n<F[r].length;n++)e===D[F[r][n][0]]&&(s=n);if(s<0)throw new Error("Internal error; couldn't find face name when fixing corners");let o="";for(let n=1;n<F[r].length;n++){o=1===n?F[r][s][0]:o+A+F[r][s][0];for(let t=1;t<F[r].length;t++)if(F[r][s][1]===F[r][t][2]){s=t;break}}F[r]=[F[r][0],o]}this.markedface=E,this.options.verbosity>1&&(console.log("# Face names: ".concat(L.map((t=>t[1])).join(" "))),console.log("# Edge names: ".concat(x.map((t=>t[1])).join(" "))),console.log("# Vertex names: ".concat(F.map((t=>t[1])).join(" "))));const C=[];for(const r of B)C.push([r[0].makenormal(),r[1],"f"]);for(const r of x)C.push([r[0].makenormal(),r[1],"e"]);for(const r of F)C.push([r[0].makenormal(),r[1],"v"]);this.facenames=L,this.faceplanes=B,this.edgenames=x,this.vertexnames=F,this.geonormals=C;const O=C.map((t=>t[1]));this.swizzler.setGripNames(O),this.options.verbosity>0&&console.log("# Distances: face ".concat(1," edge ",this.edgedistance," vertex ").concat(this.vertexdistance));for(let r=0;r<g.length;r++)for(const t of this.rotations){const e=g[r].rotateplane(t);let s=!1;for(const t of this.moveplanes)if(e.sameplane(t)){s=!0;break}s||(this.moveplanes.push(e),v[r]&&this.moveplanes2.push(e))}let I=new nt(d);const P=this.moveplanes2.slice();let S=31;for(let r=0;r<P.length;r++){const t=r+Math.floor((P.length-r)*(S/65536));I=I.split(P[t]),P[t]=P[r],S=(1657*S+101)%65536}const T=I.collect([],!0);this.faces=T,this.options.verbosity>0&&console.log("# Faces is now ".concat(T.length)),this.stickersperface=T.length;const N=[],V=W(d);for(const r of this.rotations){const t=r.rotateface(d);V.dist(W(t))<it&&N.push(r)}const j=new Array(T.length),G=[];for(let r=0;r<T.length;r++){const t=T[r].centermass();G.push([V.dist(t),t,r])}G.sort(((t,e)=>t[0]-e[0]));for(let r=0;r<T.length;r++){const t=G[r][2];if(!j[t]){j[t]=!0;for(const e of N){const s=T[t].rotate(e),o=s.centermass();for(let t=r+1;t<T.length&&!(G[t][0]-G[r][0]>it);t++){const e=G[t][2];if(!j[e]&&o.dist(G[t][1])<it){j[e]=!0,T[e]=s;break}}}}}this.shortedge=1e99;for(const r of T)for(let t=0;t<r.length;t++){const e=(t+1)%r.length,s=r.get(t).dist(r.get(e));s<this.shortedge&&(this.shortedge=s)}this.options.verbosity>0&&console.log("# Short edge is ".concat(this.shortedge)),"c"!==e||!b||w||y||(this.addNotationMapper="NxNxNCubeMapper",this.setReidOrder=!0),"c"!==e||!y||b||w||(this.addNotationMapper="SkewbMapper"),"t"!==e||!y&&!b||w||(this.addNotationMapper="PyraminxOrTetraminxMapper"),"o"===e&&b&&(this.notationMapper=new l(this.swizzler,new r(["F","D","L","BL","R","U","BR","B"])),w||y||(this.addNotationMapper="FTOMapper")),"d"===e&&b&&(this.addNotationMapper="MegaminxMapper",this.notationMapper=new l(this.swizzler,new r(["U","F","L","BL","BR","R","FR","FL","DL","B","DR","D"])))}keyface(t){return this.keyface2(t.centermass())}keyface2(t){let e="";const s=String.fromCharCode;for(const o of this.moveplanesets)if(o.length>0){const n=t.dot(o[0]);let i=0,r=1;for(;2*r<=o.length;)r*=2;for(;r>0;r>>=1)i+r<=o.length&&n>o[i+r-1].a&&(i+=r);if(i<47)e+=s(33+i);else if(i<2256)e=e+s(80+Math.floor(i/47)-1)+s(33+i%47);else{if(!(i<106079))throw Error("Too many slices for cubie encoding");e=e+s(80+Math.floor((i-47)/2209-1))+s(80+Math.floor((i-47)/47)%47)+s(33+i%47)}}return e}keyface3(t){const e=t.centermass(),s=[];for(const o of this.moveplanesets)if(o.length>0){const t=e.dot(o[0]);let n=0,i=1;for(;2*i<=o.length;)i*=2;for(;i>0;i>>=1)n+i<=o.length&&t>o[n+i-1].a&&(n+=i);s.push(n)}return s}findface(t){const e=this.keyface2(t),s=this.facelisthash.get(e);if(1===s.length)return s[0];for(let o=0;o+1<s.length;o++){const s=this.facelisthash.get(e)[o];if(Math.abs(t.dist(this.facecentermass[s]))<it)return s}return s[s.length-1]}project2d(t,e,s){const o=this.facenames[t][0],n=(e+1)%o.length,i=this.baseplanes[t];let r=o[n].sub(o[e]);const a=r.len();r=r.normalize();const h=r.cross(i).normalize();let l=s[1].sub(s[0]);const c=l.len()/a;l=l.normalize();const f=l.b,u=l.c,m=r.smul(f).sub(h.smul(u)).smul(c),p=h.smul(f).sum(r.smul(u)).smul(c),d=new X(0,s[0].b-m.dot(o[e]),s[0].c-p.dot(o[e]),0);return[m,p,d]}allstickers(){this.faces=function(t,e){const s=[];for(const o of t)for(const t of e)s.push(t.rotate(o));return s}(this.baseplanerot,this.faces),this.options.verbosity>0&&console.log("# Total stickers is now ".concat(this.faces.length)),this.facecentermass=new Array(this.faces.length);for(let h=0;h<this.faces.length;h++)this.facecentermass[h]=this.faces[h].centermass();const t=[],e=[];for(const h of this.moveplanes){const s=h.makenormal();let o=!1;for(const t of e)s.sameplane(t.makenormal())&&(o=!0);o||(e.push(s),t.push([]))}for(const h of this.moveplanes2){const s=h.makenormal();for(let o=0;o<e.length;o++)if(s.sameplane(e[o])){t[o].push(h);break}}for(let h=0;h<t.length;h++){const s=t[h].map((t=>t.normalizeplane())),o=e[h];for(let t=0;t<s.length;t++)s[t].makenormal().dist(o)>it&&(s[t]=s[t].smul(-1));s.sort(((t,e)=>t.a-e.a)),t[h]=s}this.moveplanesets=t,this.moveplanenormals=e;const s=t.map((t=>t.length));this.options.verbosity>0&&console.log("# Move plane sets: ".concat(s));const o=[];for(let h=0;h<t.length;h++)o.push([]);for(const h of this.rotations){if(Math.abs(Math.abs(h.a)-1)<it)continue;const s=h.makenormal();for(let n=0;n<t.length;n++)if(s.sameplane(e[n])){o[n].push(h);break}}this.moverotations=o;for(let h=0;h<o.length;h++){const t=o[h],s=t[0].makenormal();for(let e=0;e<t.length;e++)s.dist(t[e].makenormal())>it&&(t[e]=t[e].smul(-1));t.sort(((t,e)=>t.angle()-e.angle())),o[h][0].dot(e[h])<0&&t.reverse()}const n=o.map((t=>1+t.length));this.movesetorders=n;const i=[];let r="?";for(let A=0;A<t.length;A++){const s=e[A];let o=null,n=null;for(const t of this.geonormals){const e=s.dot(t[0]);Math.abs(e-1)<it?(n=[t[1],t[2]],r=t[2]):Math.abs(e+1)<it&&(o=[t[1],t[2]],r=t[2])}if(null===n||null===o)throw new Error("Saw positive or negative sides as null");i.push([n[0],n[1],o[0],o[1],1+t[A].length]),"NxNxNCubeMapper"===this.addNotationMapper&&"f"===r&&(this.notationMapper=new f(1+t[A].length),this.addNotationMapper=""),"SkewbMapper"===this.addNotationMapper&&1===t[0].length&&(this.notationMapper=new U(this.swizzler),this.addNotationMapper=""),"PyraminxOrTetraminxMapper"===this.addNotationMapper&&(2===t[0].length&&.333333333333333===t[0][0].a&&1.66666666666667===t[0][1].a?(this.notationMapper=new v(this.swizzler),this.addNotationMapper=""):(this.notationMapper=new b(this.swizzler),this.addNotationMapper="")),"MegaminxMapper"===this.addNotationMapper&&"f"===r&&(1+t[A].length===3&&(this.notationMapper=new c(this.notationMapper)),this.addNotationMapper=""),"FTOMapper"===this.addNotationMapper&&"f"===r&&(1+t[A].length===3&&(this.notationMapper=new h(this.notationMapper,this.swizzler)),this.addNotationMapper="")}this.movesetgeos=i;const a=new Map,l=this.faces;for(let h=0;h<l.length;h++){const t=l[h],e=this.keyface(t);if(a.get(e)){const t=a.get(e);if(t.push(h),t.length===this.baseFaceCount){this.options.verbosity>0&&console.log("# Splitting core.");for(let s=0;s<t.length;s++){const o="".concat(e," ").concat(s);a.set(o,[t[s]])}}}else a.set(e,[h])}this.facelisthash=a,this.options.verbosity>0&&console.log("# Cubies: ".concat(a.size));const u=[],m=[],p=[];for(const h of a.values())if(h.length!==this.baseFaceCount){if(h.length>1){const t=h.map((t=>l[t].centermass())),e=W(t);for(let i=0;h.length>2;i++){let s=!1;for(let o=0;o<h.length;o++){const n=(o+1)%h.length;if(e.dot(t[o].cross(t[n]))<0){const e=t[o];t[o]=t[n],t[n]=e;const i=h[o];h[o]=h[n],h[n]=i,s=!0}}if(!s)break;if(i>1e3)throw new Error("Bad epsilon math; too close to border")}let s=0;for(const i of h)s|=1<<Math.floor(i/this.stickersperface);const o=this.markedface[s];let n=-1;for(let i=0;i<h.length;i++)Math.floor(h[i]/this.stickersperface)===o&&(n=i);if(n<0)throw new Error("Could not find marked face in list");if(0!==n){const t=h.slice();for(let e=0;e<h.length;e++)h[e]=t[(n+e)%h.length]}}for(let t=0;t<h.length;t++){const e=h[t];m[e]=u.length,p[e]=t}u.push(h)}this.cubies=u,this.facetocubie=m,this.facetoord=p;const d=["?","CENTERS","EDGES","CORNERS","C4RNER","C5RNER"],g=[],w=[0,0,0,0,0,0],y=[],L=[];let B=0;const F=[],x=[],R=[],M=[],z=t=>u[t].map((t=>this.getfaceindex(t))).join(" "),D=[];for(let h=0;h<u.length;h++){const t=u[h];if(0===t.length)continue;if(L[h])continue;const e={};let s=0;R.push(0),D.push([]);const n=t.length,i=w[n]++;let r=d[n];void 0!==r&&n!==this.baseFaceCount||(r="CORE"),r+=0===i?"":i+1,g[B]=r,y[B]=n;const a=[h];let l=0;for(L[h]=!0;l<a.length;){const n=a[l++],i=z(n);if((t.length>1||void 0===e[i])&&(e[i]=s++),M[n]=e[i],F[n]=B,D[B].push(n),x[n]=R[B]++,a.length<this.rotations.length){const t=this.facecentermass[u[n][0]];for(const e of o){const s=this.facetocubie[this.findface(t.rotatepoint(e[0]))];L[s]||(a.push(s),L[s]=!0)}}}B++}if(this.setReidOrder&&4<=this.stickersperface&&this.stickersperface<=9){const t=[["UF","UR","UB","UL","DF","DR","DB","DL","FR","FL","BR","BL"],["UFR","URB","UBL","ULF","DRF","DFL","DLB","DBR"],["U","L","F","R","B","D"]],e={};for(const s of t)for(let t=0;t<s.length;t++){let o=0;for(let e=0;e<s[t].length;e++)o|=1<<s[t].charCodeAt(e)-65;e[o]=t}for(const s of D)for(const t of s){let s=0;for(const e of u[t])s|=1<<this.facenames[this.getfaceindex(e)][1].charCodeAt(0)-65;x[t]=e[s]}}if(this.cubiesetnums=F,this.cubieordnums=x,this.cubiesetnames=g,this.cubieords=R,this.orbitoris=y,this.cubievaluemap=M,this.cubiesetcubies=D,null!==this.options.fixedPieceType){for(let t=0;t<u.length;t++)if("v"===this.options.fixedPieceType&&u[t].length>2||"e"===this.options.fixedPieceType&&2===u[t].length||"f"===this.options.fixedPieceType&&1===u[t].length){this.fixedCubie=t;break}if(this.fixedCubie<0)throw new Error("Could not find a cubie of type ".concat(this.options.fixedPieceType," to fix."))}this.options.verbosity>0&&console.log("# Cubie orbit sizes ".concat(R))}unswizzle(t){const e=this.notationMapper.notationToInternal(t);return null===e?null:e.modified({family:this.swizzler.unswizzle(e.family)})}stringToBlockMove(t){const e=t.match(/^(([0-9]+)-)?([0-9]+)?([^0-9]+)([0-9]+'?)?$/);if(null===e)throw new Error("Bad move passed ".concat(t));const s=e[4];let o,n;if(void 0!==e[2]){if(void 0===e[3])throw new Error("Missing second number in range");o=parseInt(e[2],10)}void 0!==e[3]&&(n=parseInt(e[3],10));let r="1",a=1;return void 0!==e[5]&&(r=e[5],"'"===r[0]&&(r="-".concat(r.substring(1))),a=parseInt(r,10)),new i.yU(new i.VL(s,n,o),a)}parseMove(t){const e=this.notationMapper.notationToInternal(t);if(null===e)throw new Error("Bad move ".concat(t.family));let s,o=(t=e).family,n=!1;if(o.endsWith("v")&&o[0]<="Z"){if(void 0!==t.innerLayer||void 0!==t.outerLayer)throw new Error("Cannot use a prefix with full cube rotations");o=o.slice(0,-1),n=!0}o.endsWith("w")&&o[0]<="Z"&&(o=o.slice(0,-1).toLowerCase());let i=-1;const r=this.swizzler.unswizzle(o);let a=!1;for(let c=0;c<this.movesetgeos.length;c++){const t=this.movesetgeos[c];r===t[0]&&(a=!0,s=t,i=c),r===t[2]&&(a=!1,s=t,i=c)}let h=1,l=1;if(o.toUpperCase()!==o&&(l=2),void 0===s)throw new Error("Bad grip in move ".concat(t.family));if(void 0!==t.outerLayer&&(h=t.outerLayer),void 0!==t.innerLayer&&(void 0===t.outerLayer?(l=t.innerLayer,h=o<="Z"?l:1):l=t.innerLayer),h--,l--,n&&(h=0,l=this.moveplanesets[i].length),h<0||h>this.moveplanesets[i].length||l<0||l>this.moveplanesets[i].length)throw new Error("Bad slice spec ".concat(h," ").concat(l," vs ").concat(this.moveplanesets[i].length));if(0===h&&l===this.moveplanesets[i].length&&!n)throw new Error("! full puzzle rotations must be specified with v suffix.");return[void 0,i,h,l,a,t.amount]}parsemove(t){const e=this.parseMove(this.stringToBlockMove(t));return e[0]=t,e}genperms(){if(this.cmovesbyslice.length>0)return;const t=[];if(this.options.orientCenters)for(let e=0;e<this.cubies.length;e++)if(1===this.cubies[e].length){const t=this.cubies[e][0],s=this.getfaceindex(t),o=this.basefaces[s].centermass();if(o.dist(this.facecentermass[t])<it){const n=1<<s|1<<this.baseFaceCount,i=this.markedface[n],r=this.baseplanes[i].makenormal();let a=-1,h=-1;for(let e=0;e<this.faces[t].length;e++){const s=this.faces[t].get(e),n=r.dot(s.sub(o));n>a&&(a=n,h=e)}const l=(h+1)%this.faces[t].length;if(Math.abs(r.dot(this.faces[t].get(l).sub(o))-a)<it&&(h=l),0!==h){const e=[];for(let s=0;s<this.faces[t].length;s++)e.push(this.faces[t].get((s+h)%this.faces[t].length));this.faces[t]=new ot(e)}const c=this.basefaces[s].length;for(let t=1;t<c;t++)this.cubies[e].push(this.cubies[e][t-1]);this.duplicatedFaces[t]=c,this.duplicatedCubies[e]=c,this.orbitoris[this.cubiesetnums[e]]=c}}for(let e=0;e<this.moveplanesets.length;e++){const s=this.moveplanesets[e],o=[],n=[s.length+1,0];let i=1;for(;2*i<=s.length;)i*=2;for(let t=0;t<this.faces.length;t++){let e=0;if(s.length>0){const o=this.facecentermass[t].dot(s[0]);for(let t=i;t>0;t>>=1)e+t<=s.length&&o>s[e+t-1].a&&(e+=t);e=s.length-e}for(o.push(e);n.length<=e;)n.push(0);n[e]++}const r=new Array(n.length);for(let t=0;t<n.length;t++)r[t]=[];const a=[];for(let t=0;t<this.faces.length;t++){if(o[t]<0)continue;const s=[this.facetocubie[t],this.facetoord[t]];let n=this.facecentermass[t];const i=n;let h=t;const l=o[h];for(;;){o[h]=-1;const t=n.rotatepoint(this.moverotations[e][0]);if(t.dist(i)<it)break;h=this.findface(t),s.push(this.facetocubie[h],this.facetoord[h]),n=t}if(s.length>2&&this.options.orientCenters&&(1===this.cubies[s[0]].length||this.duplicatedCubies[s[0]]>1)&&this.facecentermass[t].dist(this.basefaces[this.getfaceindex(t)].centermass())<it){let t=this.faces[this.cubies[s[0]][0]];for(let o=0;o<s.length;o+=2){const n=this.faces[this.cubies[s[o]][0]];let i=-1;for(let e=0;e<t.length;e++)if(n.get(e).dist(t.get(0))<it){i=e;break}if(i<0)throw new Error("Couldn't find rotation of center faces; ignoring for now.");s[o+1]=i,t=t.rotate(this.moverotations[e][0])}}if(2===s.length&&this.options.orientCenters)for(let t=1;t<this.movesetorders[e];t++)0===l?s.push(s[0],t):s.push(s[0],(this.movesetorders[e]-t)%this.movesetorders[e]);if(s.length>2&&!a[s[0]]){if(s.length!==2*this.movesetorders[e])throw new Error("Bad length in perm gen");for(const t of s)r[l].push(t)}for(let t=0;t<s.length;t+=2)a[s[t]]=!0}for(let t=0;t<r.length;t++)r[t]=r[t].slice();t.push(r)}if(this.cmovesbyslice=t,this.options.moveList){const t=[];for(const e of this.options.moveList)t.push(this.parsemove(e));this.parsedmovelist=t}this.facelisthash.clear(),this.facecentermass=[]}getboundarygeometry(){return{baseplanes:this.baseplanes,facenames:this.facenames,faceplanes:this.faceplanes,vertexnames:this.vertexnames,edgenames:this.edgenames,geonormals:this.geonormals}}getmovesets(t){const e=this.moveplanesets[t].length;let s=[];if(void 0!==this.parsedmovelist)for(const o of this.parsedmovelist)o[1]===t&&(o[4]?s.push([o[2],o[3]]):s.push([e-o[3],e-o[2]]),s.push(o[5]));else if(this.options.vertexMoves&&!this.options.allMoves){const o=this.movesetgeos[t];if(o[1]!==o[3])for(let t=0;t<e;t++)"v"!==o[1]?(this.options.outerBlockMoves?s.push([t+1,e]):s.push([t+1]),s.push(1)):(this.options.outerBlockMoves?s.push([0,t]):s.push([t,t]),s.push(1))}else for(let o=0;o<=e;o++)(this.options.allMoves||o+o!==e)&&(this.options.outerBlockMoves?o+o>e?s.push([o,e]):s.push([0,o]):s.push([o,o]),s.push(1));if(this.fixedCubie>=0){const o=this.keyface3(this.faces[this.cubies[this.fixedCubie][0]])[t],n=[];for(let t=0;t<s.length;t+=2){let i=s[t];if(o>=i[0]&&o<=i[1])if(0===i[0])i=[i[1]+1,e];else{if(e!==i[1])throw Error("fixed cubie option would disconnect move");i=[0,i[0]-1]}let r=!1;for(let e=0;e<n.length;e+=2)if(n[e][0]===i[0]&&n[e][1]===i[1]&&n[e+1]===s[t+1]){r=!0;break}r||(n.push(i),n.push(s[t+1]))}s=n}return s}graybyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&(this.options.grayCenters||!this.options.includeCenterOrbits)||2===e&&(this.options.grayEdges||!this.options.includeEdgeOrbits)||e>2&&(this.options.grayCorners||!this.options.includeCornerOrbits)}skipbyori(t){let e=this.cubies[t].length;return this.duplicatedCubies[t]&&(e=1),1===e&&!this.options.includeCenterOrbits||2===e&&!this.options.includeEdgeOrbits||e>2&&!this.options.includeCornerOrbits}skipcubie(t){return this.skipbyori(t)}header(t){return"".concat(t+"PuzzleGeometry 0.1 Copyright 2018 Tomas Rokicki.","\n").concat(t,"\n")}writegap(){const t=this.getOrbitsDef(!1),e=[],s=[];for(let n=0;n<t.moveops.length;n++){let o="M_".concat(V(this.notationMapper,t.movenames[n])),i=!1;"'"===o[o.length-1]&&(o=o.substring(0,o.length-1),i=!0),s.push(o),i?e.push("".concat(o,":=").concat(t.moveops[n].toPerm().inv().toGap(),";")):e.push("".concat(o,":=").concat(t.moveops[n].toPerm().toGap(),";"))}e.push("Gen:=["),e.push(s.join(",")),e.push("];");const o=t.solved.identicalPieces();return e.push("ip:=[".concat(o.map((t=>"[".concat(t.map((t=>t+1)).join(","),"]"))).join(","),"];")),e.push("# Size(Group(Gen));"),e.push("# Size(Stabilizer(Group(Gen), ip, OnTuplesSets));"),e.push(""),this.header("# ")+e.join("\n")}writemathematica(){const t=this.getOrbitsDef(!1),e=[],s=[];e.push("(* ".concat(this.header("").trim()," *)"));for(let o=0;o<t.moveops.length;o++){let n="m".concat(V(this.notationMapper,t.movenames[o])),i=!1;"'"===n[n.length-1]&&(n=n.substring(0,n.length-1),i=!0),s.push(n),i?e.push("".concat(n,"=").concat(t.moveops[o].toPerm().inv().toMathematica(),";")):e.push("".concat(n,"=").concat(t.moveops[o].toPerm().toMathematica(),";"))}return e.push("gen={".concat(s.join(","),"};")),e.join("\n")}writeksolve(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"PuzzleGeometryPuzzle";const e=this.getOrbitsDef(!1);return this.header("# ")+e.toKsolve(t,this.notationMapper).join("\n")}getKPuzzleDefinition(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const s=this.getOrbitsDef(t,e).toKPuzzleDefinition(e);if(s.experimentalPuzzleDescription=this.puzzleDescription,!s)throw new Error("Missing definition!");return s}getMoveFromBits(t,e,s,o,n,i){const r=[],a=[],h=[];for(const f of this.cubieords)a.push(I(f)),h.push(O(f));for(let f=t[0];f<=t[1];f++){const t=o[f];for(let e=0;e<t.length;e+=2*i){const o=t.slice(e,e+2*i),n=this.cubiesetnums[o[0]];for(let t=0;t<o.length;t+=2)o[t]=this.cubieordnums[o[t]];let r=2,l=3;s&&(r=o.length-2,l=o.length-1),a[n]===I(this.cubieords[n])&&(a[n]=a[n].slice(),this.orbitoris[n]>1&&!this.options.fixedOrientation&&(h[n]=h[n].slice()));for(let t=0;t<o.length;t+=2)a[n][o[(t+r)%o.length]]=o[t],this.orbitoris[n]>1&&!this.options.fixedOrientation&&(h[n][o[t]]=(o[(t+l)%o.length]-o[(t+1)%o.length]+2*this.orbitoris[n])%this.orbitoris[n])}}let l=new G(I(24),O(24),1);for(let f=0;f<this.cubiesetnames.length;f++)if(!n||n[f])if(1===this.orbitoris[f]||this.options.fixedOrientation)a[f]===I(l.perm.length)?(a[f]!==l.perm&&(l=new G(a[f],h[f],1)),r.push(l)):r.push(new G(a[f],h[f],1));else{const t=new Array(h[f].length);for(let e=0;e<a[f].length;e++)t[e]=h[f][a[f][e]];r.push(new G(a[f],t,this.orbitoris[f]))}let c=new q(r);return 1!==e&&(c=c.mulScalar(e)),c}omitSet(t){for(const e of this.options.excludeOrbits)if(e===t)return!0;return!1}diffmvsets(t,e,s,o){for(let n=0;n<t.length;n+=2){let i=!1;for(let r=0;!i&&r<e.length;r+=2)o?t[n][0]+e[r][1]===s&&t[n][1]+e[r][0]===s&&t[n+1]===e[r+1]&&(i=!0):t[n][0]===e[r][0]&&t[n][1]===e[r][1]&&t[n+1]===e[r+1]&&(i=!0);if(!i)return!0}return!1}getOrbitsDef(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];const s=[];if(t)for(let p=0;p<this.cubiesetnames.length;p++)s.push(1);const o=[],n=[],i=[],r=[];for(let p=0;p<this.moveplanesets.length;p++){const t=this.getmovesets(p);i.push(t),this.options.addRotations?r.push(1):r.push(0)}const a=[];for(let p=0;p<this.moveplanesets.length;p++){const t=this.moveplanesets[p].length;let e=!1;const s=i[p];for(let o=0;o<s.length;o+=2)0===s[o][0]&&s[o][1]===t&&(e=!0);a[p]=e}if(this.options.addRotations&&(this.options.moveList||null!==this.options.fixedPieceType)){for(let t=0;t<this.moverotations.length;t++)r[t]=0;for(let t=0;t<this.moveplanesets.length;t++)if(a[t])r[t]=3;else for(let e=0;e<this.moverotations.length;e++){let s=this.moveplanenormals[t];for(let o=1;2*o<=this.movesetorders[e];o++){if(s=s.rotatepoint(this.moverotations[e][0]),r[e]&o)continue;let n=-1,a=!1;for(let t=0;t<this.moveplanenormals.length;t++){if(s.dist(this.moveplanenormals[t])<it){n=t;break}if(s.dist(this.moveplanenormals[t].smul(-1))<it){n=t,a=!0;break}}if(n<0)throw new Error("Could not find rotation");const h=i[n];(h.length!==i[t].length||this.moveplanesets[t].length!==this.moveplanesets[n].length||this.diffmvsets(h,i[t],this.moveplanesets[n].length,a))&&(r[e]|=o)}}for(let t=0;t<this.moverotations.length;t++)if(0===r[t])r[t]=1;else if(1===r[t])this.movesetorders[t]>3?r[t]=2:r[t]=0;else{if(3!==r[t])throw new Error("Impossible addrot val");r[t]=0}}for(let p=0;p<this.moveplanesets.length;p++)0===r[p]||a[p]||(i[p].push([0,this.moveplanesets[p].length]),i[p].push(r[p]));for(let p=0;p<this.moveplanesets.length;p++){const t=i[p],e=this.movesetorders[p];for(let s=0;s<t.length;s+=2)for(let e=0;e<s;e+=2)if(t[s][0]===t[e][0]&&t[s][1]===t[e][1])throw new Error("Redundant moves in moveset.");const o=[];for(let s=0;s<t.length;s+=2)for(let e=t[s][0];e<=t[s][1];e++)o[e]=1;const n=this.cmovesbyslice[p];for(let i=0;i<n.length;i++){if(1!==o[i])continue;const t=n[i];for(let o=0;o<t.length;o+=2*e){if(this.skipcubie(t[o]))continue;s[this.cubiesetnums[t[o]]]=1}}}for(let p=0;p<this.cubiesetnames.length;p++)s[p]&&(this.omitSet(this.cubiesetnames[p])?s[p]=0:(o.push(this.cubiesetnames[p]),n.push(new T(this.cubieords[p],this.options.fixedOrientation?1:this.orbitoris[p]))));const h=[];for(let p=0;p<this.cubiesetnames.length;p++){if(!s[p])continue;if(this.omitSet(this.cubiesetnames[p]))continue;const e=[],o=[];for(let s=0;s<this.cubieords[p];s++){if(t)e.push(s);else{const t=this.cubiesetcubies[p][s];e.push(this.cubievaluemap[t])}o.push(0)}h.push(new G(e,o,this.options.fixedOrientation?1:this.orbitoris[p]))}const l=[],c=[],f=[],u=[];if(e)for(let p=0;p<this.moveplanesets.length;p++){const t=this.moveplanesets[p].length,e=i[p],o=this.movesetgeos[p];for(let n=0;n<e.length;n+=2){const i=e[n];let r,a=!1;if(void 0!==this.parsedmovelist)for(const e of this.parsedmovelist){if(e[1]!==p)continue;let s=[];s=e[4]?[e[2],e[3]]:[t-e[3],t-e[2]],s[0]===i[0]&&s[1]===i[1]&&(r=e[0],a=!e[4])}if(r)l.push(r),c.push(!0);else{const s=dt(o,i,t);a=s[1];const r=s[0];1===e[n+1]?l.push(r):l.push(r+e[n+1]),c.push(!1)}u.push(0===i[0]&&i[1]===t);const h=this.getMoveFromBits(i,e[n+1],a,this.cmovesbyslice[p],s,this.movesetorders[p]);f.push(h)}}let m=new j(o,n,new _(h),l,f,u,c);return this.options.optimizeOrbits&&(m=m.optimize()),0!==this.options.scrambleAmount&&m.scramble(this.options.scrambleAmount),m}getScramble(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;const e=this.getOrbitsDef(!1);return e.toKTransformationData(e.getScrambleTransformation(t))}getMovesAsPerms(){return this.getOrbitsDef(!1).moveops.map((t=>t.toPerm()))}showcanon(t){!function(t,e){const s=t.moveops.length;if(s>30)throw new Error("Canon info too big for bitmask");const o=[],n=[];for(let r=0;r<s;r++){const e=t.moveops[r];o.push(e.order());let i=0;for(let o=0;o<s;o++){if(o===r)continue;const s=t.moveops[o];e.mul(s).equal(s.mul(e))&&(i|=1<<o)}n.push(i)}let i={0:1};for(let r=0;r<100;r++){let t=0;const s={};let a=0;for(const e in i){const r=+e,h=i[r];t+=h,a++;for(let t=0;t<o.length;t++)if(0===(r>>t&1)&&0===(r&n[t]&(1<<t)-1)){const e=r&n[t]|1<<t;void 0===s[e]&&(s[e]=0),s[e]+=(o[t]-1)*h}}e("".concat(r,": canonseq ").concat(t," states ").concat(a)),i=s}}(this.getOrbitsDef(!1),t)}getsolved(){const t=[];for(let e=0;e<this.baseFaceCount;e++)for(let s=0;s<this.stickersperface;s++)t.push(e);return new S(t)}getOrientationRotation(t){const[e,[s,o,n]]=t[0],i=new X(0,s,-o,n),[r,[a,h,l]]=t[1],c=new X(0,a,-h,l);let f=null,u=null;const m=this.swizzler.unswizzle(e),p=this.swizzler.unswizzle(r);for(const g of this.geonormals)m===g[1]&&(f=g[0]),p===g[1]&&(u=g[0]);if(!f)throw new Error("Could not find feature ".concat(e));if(!u)throw new Error("Could not find feature ".concat(r));const d=f.pointrotation(i);return u.rotatepoint(d).unproject(i).pointrotation(c.unproject(i)).mul(d)}getInitial3DRotation(){const t=this.baseFaceCount;let e=null;if(this.options.puzzleOrientation?e=this.options.puzzleOrientation:this.options.puzzleOrientations&&(e=this.options.puzzleOrientations[t]),e||(e={4:[["FLR",[0,1,0]],["F",[0,0,1]]],6:[["U",[0,1,0]],["F",[0,0,1]]],8:[["U",[0,1,0]],["F",[0,0,1]]],12:[["U",[0,1,0]],["F",[0,0,1]]],20:[["GUQMJ",[0,1,0]],["F",[0,0,1]]]}[t]),!e)throw new Error("No default orientation?");return this.getOrientationRotation(e)}generate2dmapping(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:800,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:500,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],n=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.92;function i(t,e){let s=t[1][0]-t[0][0],o=t[1][1]-t[0][1];const n=2*Math.PI/e,i=Math.cos(n),r=Math.sin(n);for(let a=2;a<e;a++){const e=s*i+o*r;o=o*i-s*r,s=e,t.push([t[a-1][0]+s,t[a-1][1]+o])}}t-=2*s,e-=2*s,this.genperms();const r=this.getboundarygeometry().facenames[0][0].length,a=this.net;if(null===a)throw new Error("No net?");const h={};let l=0,c=0,f=1,u=0;h[a[0][0]]=[[1,0],[0,0]],i(h[a[0][0]],r);for(const R of a){const t=R[0];if(!h[t])throw new Error("Bad edge description; first edge not connected.");for(let e=1;e<R.length;e++){const s=R[e];""===s||h[s]||(h[s]=[h[t][e%r],h[t][(e+r-1)%r]],i(h[s],r))}}for(const R in h){const t=h[R];for(const e of t)l=Math.min(l,e[0]),f=Math.max(f,e[0]),c=Math.min(c,e[1]),u=Math.max(u,e[1])}const m=Math.min(t/(f-l),e/(u-c)),p=.5*(t-m*(f+l)),d=.5*(e-m*(u+c)),g={},v=this.getboundarygeometry(),b={},w=[[m+p,d],[p,d]];b[a[0][0]]=w,i(b[a[0][0]],r),g[this.facenames[0][1]]=this.project2d(0,0,[new X(0,w[0][0],w[0][1],0),new X(0,w[1][0],w[1][1],0)]);const y=[];y[0]=0;for(const R of a){const t=R[0];if(!b[t])throw new Error("Bad edge description; first edge not connected.");let e=-1;for(let o=0;o<v.facenames.length;o++)if(t===v.facenames[o][1]){e=o;break}if(e<0)throw new Error("Could not find first face name ".concat(t));const s=v.facenames[e][0];for(let o=1;o<R.length;o++){const n=R[o];if(""===n||b[n])continue;b[n]=[b[t][o%r],b[t][(o+r-1)%r]],i(b[n],r);const a=y[e],h=s[(a+o)%r].sum(s[(a+o+r-1)%r]).smul(.5),l=at(v.edgenames,h),c=gt(v.edgenames[l][1],this.facenames),f=c[t===c[0]?1:0];let u=-1;for(let t=0;t<v.facenames.length;t++)if(f===v.facenames[t][1]){u=t;break}if(u<0)throw new Error("Could not find second face name");const m=v.facenames[u][0];for(let e=0;e<m.length;e++){if(m[e].sum(m[(e+1)%r]).smul(.5).dist(h)<=it){const s=b[t][(o+r-1)%r],n=b[t][o%r];y[u]=e,g[f]=this.project2d(u,e,[new X(0,n[0],n[1],0),new X(0,s[0],s[1],0)]);break}}}}let L=0,B=0;const F=this.getInitial3DRotation();for(let R of this.faces){o&&(R=R.rotate(F));for(let t=0;t<R.length;t++)L=Math.max(L,Math.abs(R.get(t).b)),B=Math.max(B,Math.abs(R.get(t).c))}const x=Math.min(e/B/2,(t-s)/L/4);return(i,r)=>{if(o){r=r.rotatepoint(F);const o=.5*s+.25*t,n=this.baseplanes[i].rotateplane(F).d<0?1:-1;return[s+.5*t+n*(o-r.b*x),s+.5*e+r.c*x]}{const t=g[this.facenames[i][1]];return[s+n*r.dot(t[0])+t[2].b,s+e-n*r.dot(t[1])-t[2].c]}}}generatesvg(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:800,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:500,s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];const n=this.generate2dmapping(t,e,s,o);function i(t,e,s){return'<polygon id="'.concat(t,'" class="sticker" style="fill: ').concat(s,'" points="').concat(e.map((t=>"".concat(t[0]," ").concat(t[1]))).join(" "),'"/>\n')}const r=this.getsolved(),a=[],h=[];for(let c=0;c<this.baseFaceCount;c++)a[c]=this.colors[this.facenames[c][1]];for(let c=0;c<this.faces.length;c++){const t=this.faces[c],e=Math.floor(c/this.stickersperface),s=[];for(let o=0;o<t.length;o++)s.push(n(e,t.get(o)));h.push(s)}const l=[];for(let c=0;c<this.baseFaceCount;c++){l.push("<g>"),l.push("<title>".concat(this.facenames[c][1],"</title>\n"));for(let t=0;t<this.stickersperface;t++){const e=c*this.stickersperface+t,s=this.facetocubie[e],o=this.facetoord[e],n=this.cubiesetnums[s],f=this.cubieordnums[s],u=this.graybyori(s)?"#808080":a[r.p[e]];let m="".concat(this.cubiesetnames[n],"-l").concat(f,"-o").concat(o);if(l.push(i(m,h[e],u)),this.duplicatedFaces[e])for(let t=1;t<this.duplicatedFaces[e];t++)m="".concat(this.cubiesetnames[n],"-l").concat(f,"-o").concat(t),l.push(i(m,h[e],u))}l.push("</g>")}return'<svg id="svg" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 800 500">\n<style type="text/css"><![CDATA[.sticker { stroke: #000000; stroke-width: 1px; }]]></style>\n'.concat(l.join(""),"</svg>")}get3d(t){const e=[],s=this.getInitial3DRotation(),o=[],n=.52*this.basefaces[0].get(0).len();for(let i=0;i<this.basefaces.length;i++){const t=this.basefaces[i].rotate(s),e=this.facenames[i][1];o.push({coords:bt(t,n),name:e})}for(let i=0;i<this.faces.length;i++){const o=Math.floor(i/this.stickersperface),r=this.facetocubie[i],a=this.facetoord[i],h=this.cubiesetnums[r],l=this.cubieordnums[r];let c=this.graybyori(r)?null!==t&&void 0!==t&&t.darkIgnoredOrbits?"#222222":"#808080":this.colors[this.facenames[o][1]];null!==t&&void 0!==t&&t.stickerColors&&(c=t.stickerColors[i]);const f=this.faces[i].rotate(s);e.push({coords:bt(f,n),color:c,orbit:this.cubiesetnames[h],ord:l,ori:a,face:o});let u=f;if(this.duplicatedFaces[i]){const t=u.length/this.duplicatedFaces[i];for(let s=1;s<this.duplicatedFaces[i];s++){for(let e=0;e<t;e++)u=u.rotateforward();e.push({coords:bt(u,n),color:c,orbit:this.cubiesetnames[h],ord:l,ori:s,face:o,isDup:!0})}}}const r=[];for(let l=0;l<this.movesetgeos.length;l++){const t=this.movesetgeos[l],e=this.movesetorders[l];for(const o of this.geonormals)t[0]===o[1]&&t[1]===o[2]&&(r.push({coordinates:vt(o[0].rotatepoint(s),1),quantumMove:new i.yU(t[0]),order:e}),r.push({coordinates:vt(o[0].rotatepoint(s).smul(-1),1),quantumMove:new i.yU(t[2]),order:e}))}const a=this.generate2dmapping(2880,2160,0,!1,1),h=(()=>{const t=s.invrot();return(e,s)=>{let o=new X(0,s[0]*n,-s[1]*n,s[2]*n);o=o.rotatepoint(t);const i=a(e,o);return i[0]/=2880,i[1]=1-i[1]/2160,i}})().bind(this);return{stickers:e,faces:o,axis:r,unswizzle:this.unswizzle.bind(this),notationMapper:this.notationMapper,textureMapper:{getuv:h}}}getGeoNormal(t){const e=this.getInitial3DRotation(),s=this.swizzler.unswizzle(t);for(const o of this.geonormals)if(s===o[1]){const t=vt(o[0].rotatepoint(e),1);return Math.abs(t[0])<it&&Math.abs(t[2])<it&&(t[0]=0,t[2]=1e-6),t}}getfaceindex(t){const e=this.stickersperface;return Math.floor(t/e)}textForTwizzleExplorer(){return"Faces ".concat(this.baseplanerot.length,"\nStickers per face ").concat(this.stickersperface,"\nShort edge ").concat(this.shortedge,"\nCubies ").concat(this.cubies.length,"\nEdge distance ").concat(this.edgedistance,"\nVertex distance ").concat(this.vertexdistance)}writeSchreierSims(t){const e=this.getOrbitsDef(!1).reassemblySize();t("Reassembly size is ".concat(e));const s=st(this.getMovesAsPerms(),t);t("Ratio is ".concat(e/s))}},yt=class{constructor(t,e){(0,n.A)(this,"orbitNames",void 0),this.pg=t,this.orbitNames=e.orbitnames}lookupMove(t){const e=this.pg.parseMove(t);if(this.pg.parsedmovelist){let t=!1;for(const s of this.pg.parsedmovelist)s[1]===e[1]&&s[2]===e[2]&&s[3]===e[3]&&s[4]===e[4]&&(t=!0);if(!t)return null}let s=[e[2],e[3]];if(!e[4]){const t=this.pg.moveplanesets[e[1]].length;s=[t-e[3],t-e[2]]}const o=this.pg.getMoveFromBits(s,e[5],!e[4],this.pg.cmovesbyslice[e[1]],void 0,this.pg.movesetorders[e[1]]);return j.transformToKTransformationData(this.orbitNames,o)}remapKPuzzleDefinition(t){return function(t,e){const s={...t,moves:{}};for(const[o,n]of Object.entries(t.moves)){let t=o,r="";["v","w"].includes(o.at(-1))&&(t=o.slice(0,-1),r=o.slice(-1));const a=e.notationToExternal(i.yU.fromString(t));if(!a)continue;const h=a+r;if(!h)throw new Error("Missing external move name for: ".concat(o.toString()));s.moves[h.toString()]=n}return s}(t,this.pg.notationMapper)}}}}]);
//# sourceMappingURL=567.fd9267cb.chunk.js.map